package nds.model.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the GROUPPERM table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="GROUPPERM"
 */
public abstract class BaseGroupperm  implements Serializable {

	public static String PROP_PERMISSION = "Permission";
	public static String PROP_GROUP_ID = "GroupId";
	public static String PROP_DIRECTORY = "Directory";
	public static String PROP_DIRECTORY_ID = "DirectoryId";
	public static String PROP_ID = "Id";
	public static String PROP_GROUP = "Group";


	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private java.lang.Integer _id;

	// fields
	private java.lang.Integer _groupId;
	private java.lang.Integer _directoryId;
	private java.lang.Integer _permission;

	// many to one
	private nds.model.Groups _group;
	private nds.model.Directory _directory;


	// constructors
	public BaseGroupperm () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseGroupperm (java.lang.Integer _id) {
		this.setId(_id);
		initialize();
	}

	/**
	 * Constructor for required fields
	 */
	public BaseGroupperm (
		java.lang.Integer _id,
		nds.model.Groups _group,
		nds.model.Directory _directory,
		java.lang.Integer _groupId,
		java.lang.Integer _directoryId,
		java.lang.Integer _permission) {

		this.setId(_id);
		this.setGroup(_group);
		this.setDirectory(_directory);
		this.setGroupId(_groupId);
		this.setDirectoryId(_directoryId);
		this.setPermission(_permission);
		initialize();
	}

	protected void initialize () {}



	/**
	 * Return the unique identifier of this class
     * @hibernate.id
     *  generator-class="sequence"
     *  column="ID"
     */
	public java.lang.Integer getId () {
		return _id;
	}

	/**
	 * Set the unique identifier of this class
	 * @param _id the new ID
	 */
	public void setId (java.lang.Integer _id) {
		this._id = _id;
		this.hashCode = Integer.MIN_VALUE;
	}


	/**
	 * Return the value associated with the column: GROUPID
	 */
	public java.lang.Integer getGroupId () {
		return _groupId;
	}

	/**
	 * Set the value related to the column: GROUPID
	 * @param _groupId the GROUPID value
	 */
	public void setGroupId (java.lang.Integer _groupId) {
		this._groupId = _groupId;
	}


	/**
	 * Return the value associated with the column: DIRECTORYID
	 */
	public java.lang.Integer getDirectoryId () {
		return _directoryId;
	}

	/**
	 * Set the value related to the column: DIRECTORYID
	 * @param _directoryId the DIRECTORYID value
	 */
	public void setDirectoryId (java.lang.Integer _directoryId) {
		this._directoryId = _directoryId;
	}


	/**
	 * Return the value associated with the column: PERMISSION
	 */
	public java.lang.Integer getPermission () {
		return _permission;
	}

	/**
	 * Set the value related to the column: PERMISSION
	 * @param _permission the PERMISSION value
	 */
	public void setPermission (java.lang.Integer _permission) {
		this._permission = _permission;
	}


	/**
     * @hibernate.property
     *  column=GROUPID
	 * not-null=true
	 */
	public nds.model.Groups getGroup () {
		return this._group;
	}

	/**
	 * Set the value related to the column: GROUPID
	 * @param _group the GROUPID value
	 */
	public void setGroup (nds.model.Groups _group) {
		this._group = _group;
	}


	/**
     * @hibernate.property
     *  column=DIRECTORYID
	 * not-null=true
	 */
	public nds.model.Directory getDirectory () {
		return this._directory;
	}

	/**
	 * Set the value related to the column: DIRECTORYID
	 * @param _directory the DIRECTORYID value
	 */
	public void setDirectory (nds.model.Directory _directory) {
		this._directory = _directory;
	}


	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof nds.model.base.BaseGroupperm)) return false;
		else {
			nds.model.base.BaseGroupperm mObj = (nds.model.base.BaseGroupperm) obj;
			if (null == this.getId() || null == mObj.getId()) return false;
			else return (this.getId().equals(mObj.getId()));
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			if (null == this.getId()) return super.hashCode();
			else {
				String hashStr = this.getClass().getName() + ":" + this.getId().hashCode();
				this.hashCode = hashStr.hashCode();
			}
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}